<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://www.tonymitchell.ca/</id><title>Tony Mitchell</title><subtitle>Writings on architecture, software development, IoT, and more</subtitle> <updated>2022-06-06T19:26:06-07:00</updated> <author> <name>Tony Mitchell</name> <uri>https://www.tonymitchell.ca/</uri> </author><link rel="self" type="application/atom+xml" href="https://www.tonymitchell.ca/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://www.tonymitchell.ca/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Tony Mitchell </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Fix WSL2 clock skew issues</title><link href="https://www.tonymitchell.ca/posts/wsl-tnt-fix-clock-skew/" rel="alternate" type="text/html" title="Fix WSL2 clock skew issues" /><published>2022-06-06T12:00:00-07:00</published> <updated>2022-06-06T18:55:33-07:00</updated> <id>https://www.tonymitchell.ca/posts/wsl-tnt-fix-clock-skew/</id> <content src="https://www.tonymitchell.ca/posts/wsl-tnt-fix-clock-skew/" /> <author> <name>Tony Mitchell</name> </author> <category term="Tips &amp; Tricks" /> <category term="WSL" /> <summary> If you’re using WSL2 on a laptop, there are known issues with clock skew that can happen when your laptop hibernates. This can result in your WSL time and your Windows time getting out of sync and causes all kinds of issues inside Linux. To resolve this there are two workarounds: From inside WSL you can run the following command to re-sync with the hardware clock. $ hwclock -s ... </summary> </entry> <entry><title>Apply updates to multiple WSL Linux environments quickly</title><link href="https://www.tonymitchell.ca/posts/wsl-tnt-update-wsl-linux-env/" rel="alternate" type="text/html" title="Apply updates to multiple WSL Linux environments quickly" /><published>2022-06-05T12:00:00-07:00</published> <updated>2022-06-06T18:55:33-07:00</updated> <id>https://www.tonymitchell.ca/posts/wsl-tnt-update-wsl-linux-env/</id> <content src="https://www.tonymitchell.ca/posts/wsl-tnt-update-wsl-linux-env/" /> <author> <name>Tony Mitchell</name> </author> <category term="Tips &amp; Tricks" /> <category term="WSL" /> <summary> You can update your default WSL environment with this command (assuming it uses the APT packaging system ): C:&amp;gt; wsl -u root -- bash -c "apt-get update &amp;amp;&amp;amp; apt-get -y upgrade &amp;amp;&amp;amp; apt-get autoremove" If you have multiple, you can specify it on the command line with the Distro (-d) parameter. In the example below I’m updating 3 of my WSL environments in one go from a batch file... </summary> </entry> <entry><title>Use VS Code with the AVR toolchain</title><link href="https://www.tonymitchell.ca/posts/use-vscode-with-avr-toolchain/" rel="alternate" type="text/html" title="Use VS Code with the AVR toolchain" /><published>2022-05-21T11:00:00-07:00</published> <updated>2022-06-06T18:55:33-07:00</updated> <id>https://www.tonymitchell.ca/posts/use-vscode-with-avr-toolchain/</id> <content src="https://www.tonymitchell.ca/posts/use-vscode-with-avr-toolchain/" /> <author> <name>Tony Mitchell</name> </author> <category term="Tutorial" /> <category term="AVR" /> <summary> Overview This guide will take you through the steps to configure Visual Studio Code for AVR programming in C/C++, including working Intellisense and a build task to execute your Makefile with different targets. Prerequisites Setup AVR toolchain If you haven’t already done so, start by setting up the AVR tool chain on your system so you can build AVR projects. Follow the appropriate guide f... </summary> </entry> <entry><title>Building AVR projects with make</title><link href="https://www.tonymitchell.ca/posts/building-avr-projects-with-make/" rel="alternate" type="text/html" title="Building AVR projects with make" /><published>2022-05-21T11:00:00-07:00</published> <updated>2022-06-06T18:55:33-07:00</updated> <id>https://www.tonymitchell.ca/posts/building-avr-projects-with-make/</id> <content src="https://www.tonymitchell.ca/posts/building-avr-projects-with-make/" /> <author> <name>Tony Mitchell</name> </author> <category term="Tutorial" /> <category term="AVR" /> <summary> In this guide we’ll go through the process of setting up a Makefile to build a simple AVR project. This guide assumes you have already set up a working AVR toolchain. If not please follow one of these guides first: How to setup the AVR toolchain on Windows How to setup the AVR toolchain on WSL2 (Windows 10+) How to setup the AVR toolchain on Linux Project setup Before we get into th... </summary> </entry> <entry><title>How to setup the AVR toolchain on WSL2 (Windows 10+)</title><link href="https://www.tonymitchell.ca/posts/setup-avr-toolchain-on-wsl/" rel="alternate" type="text/html" title="How to setup the AVR toolchain on WSL2 (Windows 10+)" /><published>2022-05-21T10:00:00-07:00</published> <updated>2022-06-06T18:55:33-07:00</updated> <id>https://www.tonymitchell.ca/posts/setup-avr-toolchain-on-wsl/</id> <content src="https://www.tonymitchell.ca/posts/setup-avr-toolchain-on-wsl/" /> <author> <name>Tony Mitchell</name> </author> <category term="Tutorial" /> <category term="AVR" /> <summary> Overview This guide will help you get your environment set up to build projects on the Atmel AVR chips (e.g. ATmega328, ATtiny85, etc.) projects on Windows using WSL-based tools. Summary: Install the AVR tools Testing the AVR toolchain Programming the chip Next Steps Troubleshooting Tutorial Versions I have written 3 different versions of this tutorial that cover the follow... </summary> </entry> </feed>
